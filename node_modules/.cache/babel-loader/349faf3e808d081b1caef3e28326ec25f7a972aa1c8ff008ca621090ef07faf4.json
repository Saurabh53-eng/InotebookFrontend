{"ast":null,"code":"import NoteContext from\"./noteContext\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NoteState=props=>{const notesInitial=[];const host=\"https://inotebookbackend-4t39.onrender.com\";const[notes,setnotes]=useState(notesInitial);//get all notes\nconst getNote=async()=>{const response=await fetch(\"\".concat(host,\"/api/notes/fetchallnotes\"),{method:'GET',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});const json=await response.json();setnotes(json);};//add a note\nconst addNote=async(title,description,tag)=>{const response=await fetch(\"\".concat(host,\"/api/notes/addnote\"),{method:'POST',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title,description,tag})});const json=await response.json();if(json.user){setnotes(notes.concat(json));}else{return json;}};//delete a note\nconst deleteNote=async id=>{//a\\Api call to delete\nconst response=await fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:'DELETE',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});await response.json();//Clint side code\nconst newnotes=notes.filter(note=>{return id!==note._id;});setnotes(newnotes);};//edit a note\nconst editNote=async(id,title,description,tag)=>{const response=await fetch(\"\".concat(host,\"/api/notes/updatenote/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title,description,tag})});await response.json();let newNote=JSON.parse(JSON.stringify(notes));for(let index=0;index<newNote.length;index++){let element=newNote[index];if(element._id===id){element.title=title;element.description=description;element.tag=tag;break;}}setnotes(newNote);};return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes,getNote,addNote,deleteNote,editNote},children:props.children});};export default NoteState;","map":{"version":3,"names":["NoteContext","React","useState","jsx","_jsx","NoteState","props","notesInitial","host","notes","setnotes","getNote","response","fetch","concat","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","user","deleteNote","id","newnotes","filter","note","_id","editNote","newNote","parse","index","length","element","Provider","value","children"],"sources":["C:/Users/Admin/iNotebook/frontend/src/context/notes/NoteState.js"],"sourcesContent":["\nimport NoteContext from \"./noteContext\";\nimport React, { useState } from 'react'\n\nconst NoteState = (props) => {\n  const notesInitial = []\n  const host=\"https://inotebookbackend-4t39.onrender.com\"\n  const [notes, setnotes] = useState(notesInitial);\n\n  //get all notes\n  const getNote = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token':localStorage.getItem('token')\n      },\n\n    });\n\n    const json = await response.json();\n    setnotes(json)\n  }\n\n  //add a note\n  const addNote = async (title, description, tag) => {\n\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token':localStorage.getItem('token')\n      },\n      body: JSON.stringify({ title, description, tag })\n\n    });\n \n    const json = await response.json();\n    if(json.user){\n      setnotes(notes.concat(json))\n    }else{\n      return json\n    }\n   \n  }\n\n  //delete a note\n  const deleteNote = async(id) => {\n    //a\\Api call to delete\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token':localStorage.getItem('token')\n      },\n\n    });\n\n    await response.json();\n\n  //Clint side code\n    const newnotes = notes.filter((note) => {\n      return id !== note._id\n    });\n    setnotes(newnotes)\n  }\n\n  //edit a note\n  const editNote = async (id, title, description, tag) => {\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token':localStorage.getItem('token')\n      },\n\n      body: JSON.stringify({ title, description, tag })\n    });\n    await response.json();\n\n    let newNote=JSON.parse(JSON.stringify(notes))\n    for (let index = 0; index < newNote.length; index++) {\n      let element = newNote[index];\n      if(element._id===id){ \n      element.title = title;\n      element.description = description;\n      element.tag = tag;\n      break;\n      }\n    }\n    setnotes(newNote)\n  }\n\n  return (\n    <NoteContext.Provider value={{ notes, getNote, addNote, deleteNote, editNote }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}